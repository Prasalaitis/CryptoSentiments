services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group:  "/aws/eks/hilarious-crypto-dinosaur/cluster"
        awslogs-region: "eu-north-1"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_HEAP_OPTS: "-Xmx512m -Xms256m"
    ports:
      - "9092:9092"
    volumes:
      - kafka-data:/var/lib/kafka
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group:  "/aws/eks/hilarious-crypto-dinosaur/cluster"
        awslogs-region: "eu-north-1"

  spark:
    image: bitnami/spark:latest
    container_name: spark
    depends_on:
      - kafka
    env_file:
      - .env
    environment:
      - SPARK_MODE=master
    volumes:
      - ./processing:/opt/spark-apps
    command: >
      bin/spark-submit --master local[2] /opt/spark-apps/streaming_processing.py
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group:  "/aws/eks/hilarious-crypto-dinosaur/cluster"
        awslogs-region: "eu-north-1"

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reddit-ingestion-app
    depends_on:
      - kafka
    env_file:
      - .env
    ports:
      - "8501:8501"
    restart: always
    logging:
      driver: awslogs
      options:
        awslogs-group:  "/aws/eks/hilarious-crypto-dinosaur/cluster"
        awslogs-region: "eu-north-1"

volumes:
  kafka-data:
